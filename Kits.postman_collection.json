{
	"info": {
		"_postman_id": "3b25d819-19c6-4be5-a3e6-7061a24def83",
		"name": "Kits",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23556918",
		"_collection_link": "https://gold-moon-503209.postman.co/workspace/%25D0%25AF%25D0%25BD%25D0%25B4%25D0%25B5%25D0%25BA%25D1%2581.%25D0%259F%25D1%2580%25D0%25B8%25D0%25BB%25D0%25B0%25D0%25B2%25D0%25BE%25D0%25BA~7d58dd19-5ca9-46ed-996f-30473984cf93/collection/23556918-3b25d819-19c6-4be5-a3e6-7061a24def83?action=share&creator=23556918&source=collection_link"
	},
	"item": [
		{
			"name": "create kits",
			"item": [
				{
					"name": "Create 7th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response structure\", function () {\r",
									"  pm.response.to.have.jsonBody('name');\r",
									"  pm.response.to.have.jsonBody('card');\r",
									"  pm.response.to.have.jsonBody('card.id');\r",
									"  pm.response.to.have.jsonBody('card.name');\r",
									"  pm.response.to.have.jsonBody('productsList');\r",
									"  pm.response.to.have.jsonBody('id');\r",
									"  pm.response.to.have.jsonBody('productsCount');\r",
									"});\r",
									"\r",
									"pm.test(\"Response values\", function () {\r",
									"  pm.expect(pm.response.json().name).to.eql(\"Тестовый набор7\");\r",
									"  pm.expect(pm.response.json().card.id).to.eql(1);\r",
									"  pm.expect(pm.response.json().card.name).to.eql(\"Под ситуацию\");\r",
									"  pm.expect(pm.response.json().productsList).to.eql(null);\r",
									"  pm.expect(pm.response.json().id).to.eql(7);\r",
									"  pm.expect(pm.response.json().productsCount).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Тестовый набор7\",\r\n\"cardId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits?cardId=1",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits"
							],
							"query": [
								{
									"key": "cardId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create 8th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response structure\", function () {\r",
									"  pm.response.to.have.jsonBody('name');\r",
									"  pm.response.to.have.jsonBody('card');\r",
									"  pm.response.to.have.jsonBody('card.id');\r",
									"  pm.response.to.have.jsonBody('card.name');\r",
									"  pm.response.to.have.jsonBody('productsList');\r",
									"  pm.response.to.have.jsonBody('id');\r",
									"  pm.response.to.have.jsonBody('productsCount');\r",
									"});\r",
									"\r",
									"pm.test(\"Response values\", function () {\r",
									"  pm.expect(pm.response.json().name).to.eql(\"Тестовый набор8\");\r",
									"  pm.expect(pm.response.json().card.id).to.eql(1);\r",
									"  pm.expect(pm.response.json().card.name).to.eql(\"Под ситуацию\");\r",
									"  pm.expect(pm.response.json().productsList).to.eql(null);\r",
									"  pm.expect(pm.response.json().id).to.eql(8);\r",
									"  pm.expect(pm.response.json().productsCount).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Тестовый набор8\",\r\n\"cardId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits?cardId=1",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits"
							],
							"query": [
								{
									"key": "cardId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create 9th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response structure\", function () {\r",
									"  pm.response.to.have.jsonBody('name');\r",
									"  pm.response.to.have.jsonBody('card');\r",
									"  pm.response.to.have.jsonBody('card.id');\r",
									"  pm.response.to.have.jsonBody('card.name');\r",
									"  pm.response.to.have.jsonBody('productsList');\r",
									"  pm.response.to.have.jsonBody('id');\r",
									"  pm.response.to.have.jsonBody('productsCount');\r",
									"});\r",
									"\r",
									"pm.test(\"Response values\", function () {\r",
									"  pm.expect(pm.response.json().name).to.eql(\"Тестовый набор9\");\r",
									"  pm.expect(pm.response.json().card.id).to.eql(1);\r",
									"  pm.expect(pm.response.json().card.name).to.eql(\"Под ситуацию\");\r",
									"  pm.expect(pm.response.json().productsList).to.eql(null);\r",
									"  pm.expect(pm.response.json().id).to.eql(9);\r",
									"  pm.expect(pm.response.json().productsCount).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Тестовый набор9\",\r\n\"cardId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits?cardId=1",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits"
							],
							"query": [
								{
									"key": "cardId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add products to kit",
			"item": [
				{
					"name": "Successful scenario",
					"item": [
						{
							"name": "1.1 + 1.13 Successful scenario - 1 product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure\", function () {\r",
											"  pm.response.to.have.jsonBody('id');\r",
											"  pm.response.to.have.jsonBody('name');\r",
											"  pm.response.to.have.jsonBody('productsList');\r",
											"  pm.response.to.have.jsonBody('productsCount');\r",
											"  pm.response.to.have.jsonBody('productsList[0].id');\r",
											"  pm.response.to.have.jsonBody('productsList[0].name');\r",
											"  pm.response.to.have.jsonBody('productsList[0].price');\r",
											"  pm.response.to.have.jsonBody('productsList[0].weight');\r",
											"  pm.response.to.have.jsonBody('productsList[0].units');\r",
											"  pm.response.to.have.jsonBody('productsList[0].quantity');\r",
											"});\r",
											"\r",
											"pm.test(\"Response values\", function () {\r",
											"  pm.expect(pm.response.json().id).to.eql(7);\r",
											"  pm.expect(pm.response.json().name).to.eql(\"Тестовый набор7\");\r",
											"  pm.expect(pm.response.json().productsCount).to.eql(1);\r",
											"  pm.expect(pm.response.json().productsList[0].id).to.eql(2);\r",
											"  pm.expect(pm.response.json().productsList[0].name).to.eql(\"Evervess Тоник напиток сильногазированный\");\r",
											"  pm.expect(pm.response.json().productsList[0].price).to.eql(89);\r",
											"  pm.expect(pm.response.json().productsList[0].weight).to.eql(1);\r",
											"  pm.expect(pm.response.json().productsList[0].units).to.eql(\"л\");\r",
											"  pm.expect(pm.response.json().productsList[0].quantity).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Checking product was added to the database\", function() {\r",
											"  pm.sendRequest({\r",
											"    url: pm.variables.get(\"server_url\") + \"/api/db/resources/kit_model.csv\",\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"      \"Content-Type\": \"text/csv\"\r",
											"    }\r",
											"  }, function(err, res) {\r",
											"    pm.expect(err).to.be.null;\r",
											"    pm.expect(res).to.have.property('code', 200);\r",
											"    \r",
											"    // Parse the CSV data into an array\r",
											"    var data = res.text().trim().split(\"\\n\").map(function(line) {\r",
											"      return line.split(\",\");\r",
											"    });\r",
											"    \r",
											"    // Check that there is at least one row of data\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"    \r",
											"    // Find the row with the matching kit ID\r",
											"    var row = data.find(function(row) {\r",
											"      return row[0] == \"7\";\r",
											"    });\r",
											"    \r",
											"    pm.expect((row[2] == \"[id:2; quantity:1]\")).to.eql(true, \"Product data does not match expected value\");\r",
											"  });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productsList\": [\r\n        {\r\n            \"id\": 2,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.1 + 1.14 Successful scenario - 2 products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure\", function () {\r",
											"  pm.response.to.have.jsonBody('id');\r",
											"  pm.response.to.have.jsonBody('name');\r",
											"  pm.response.to.have.jsonBody('productsList');\r",
											"  pm.response.to.have.jsonBody('productsCount');\r",
											"  pm.response.to.have.jsonBody('productsList[0].id');\r",
											"  pm.response.to.have.jsonBody('productsList[0].name');\r",
											"  pm.response.to.have.jsonBody('productsList[0].price');\r",
											"  pm.response.to.have.jsonBody('productsList[0].weight');\r",
											"  pm.response.to.have.jsonBody('productsList[0].units');\r",
											"  pm.response.to.have.jsonBody('productsList[0].quantity');\r",
											"  pm.response.to.have.jsonBody('productsList[1].id');\r",
											"  pm.response.to.have.jsonBody('productsList[1].name');\r",
											"  pm.response.to.have.jsonBody('productsList[1].price');\r",
											"  pm.response.to.have.jsonBody('productsList[1].weight');\r",
											"  pm.response.to.have.jsonBody('productsList[1].units');\r",
											"  pm.response.to.have.jsonBody('productsList[1].quantity');\r",
											"});\r",
											"\r",
											"pm.test(\"Response values\", function () {\r",
											"  pm.expect(pm.response.json().id).to.eql(7);\r",
											"  pm.expect(pm.response.json().name).to.eql(\"Тестовый набор7\");\r",
											"  pm.expect(pm.response.json().productsCount).to.eql(3);\r",
											"  pm.expect(pm.response.json().productsList[0].id).to.eql(2);\r",
											"  pm.expect(pm.response.json().productsList[0].name).to.eql(\"Evervess Тоник напиток сильногазированный\");\r",
											"  pm.expect(pm.response.json().productsList[0].price).to.eql(89);\r",
											"  pm.expect(pm.response.json().productsList[0].weight).to.eql(1);\r",
											"  pm.expect(pm.response.json().productsList[0].units).to.eql(\"л\");\r",
											"  pm.expect(pm.response.json().productsList[0].quantity).to.eql(2);\r",
											"  pm.expect(pm.response.json().productsList[1].id).to.eql(1);\r",
											"  pm.expect(pm.response.json().productsList[1].name).to.eql(\"Сок Jumex апельсин без сахара\");\r",
											"  pm.expect(pm.response.json().productsList[1].price).to.eql(149);\r",
											"  pm.expect(pm.response.json().productsList[1].weight).to.eql(473);\r",
											"  pm.expect(pm.response.json().productsList[1].units).to.eql(\"мл\");\r",
											"  pm.expect(pm.response.json().productsList[1].quantity).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Checking product was added to the database\", function() {\r",
											"  pm.sendRequest({\r",
											"    url: pm.variables.get(\"server_url\") + \"/api/db/resources/kit_model.csv\",\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"      \"Content-Type\": \"text/csv\"\r",
											"    }\r",
											"  }, function(err, res) {\r",
											"    pm.expect(err).to.be.null;\r",
											"    pm.expect(res).to.have.property('code', 200);\r",
											"    \r",
											"    // Parse the CSV data into an array\r",
											"    var data = res.text().trim().split(\"\\n\").map(function(line) {\r",
											"      return line.split(\",\");\r",
											"    });\r",
											"    \r",
											"    // Find the row with the matching kit ID\r",
											"    var matchingRow = data.find(function(row) {\r",
											"      return row[0] === \"7\" && row[1] === \"Тестовый набор7\";\r",
											"    });\r",
											"    \r",
											"    // Check that the row has the expected product data\r",
											"    pm.expect(matchingRow[2]).to.eql(\"[id:2; quantity:2];[id:1; quantity:1]\");\r",
											"  });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productsList\": [\r\n        {\r\n            \"id\": 1,\r\n            \"quantity\": 1\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.1 Successful scenario - 15 products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"productCount summs all product quantities. \", function () {\r",
											"  pm.expect(pm.response.json().productsCount).to.eql(18);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productsList\": [\r\n        {\r\n            \"id\": 1,\r\n            \"quantity\": 1\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 3,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 4,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 5,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 6,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 7,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 8,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 9,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 10,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 11,\r\n            \"quantity\": 1\r\n        },\r\n             {\r\n            \"id\": 12,\r\n            \"quantity\": 1\r\n        },\r\n        {\r\n            \"id\": 13,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 14,\r\n            \"quantity\": 1\r\n        },\r\n                {\r\n            \"id\": 15,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.1 Successful scenario - 29 products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"productCount summs all product quantities. \", function () {\r",
											"  pm.expect(pm.response.json().productsCount).to.eql(29);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"productsList\": [{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 3,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 4,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 5,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 6,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 7,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 8,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 9,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 10,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 11,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n                        {\r\n            \"id\": 12,\r\n            \"quantity\": 1\r\n        },\r\n                        {\r\n            \"id\": 13,\r\n            \"quantity\": 1\r\n        },\r\n\t\t{\r\n\t\t\t\"id\": 14,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 15,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 16,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 17,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 18,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 19,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 20,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 21,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 22,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 23,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 24,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 25,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 26,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 27,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 28,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 29,\r\n\t\t\t\"quantity\": 1\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/8/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"8",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.1 Successful scenario - 30 products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"productCount summs all product quantities. \", function () {\r",
											"  pm.expect(pm.response.json().productsCount).to.eql(30);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"productsList\": [{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 3,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 4,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 5,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 6,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 7,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 8,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 9,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 10,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 11,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n                        {\r\n            \"id\": 12,\r\n            \"quantity\": 1\r\n        },\r\n                        {\r\n            \"id\": 13,\r\n            \"quantity\": 1\r\n        },\r\n\t\t{\r\n\t\t\t\"id\": 14,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 15,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 16,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 17,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 18,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 19,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 20,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 21,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 22,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 23,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 24,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 25,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 26,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 27,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 28,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 29,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 30,\r\n\t\t\t\"quantity\": 1\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/9/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"9",
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ProductList",
					"item": [
						{
							"name": "1.2 empty product list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productsList\": [\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 31 products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"productsList\": [{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 3,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 4,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 5,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 6,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 7,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 8,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 9,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 10,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 11,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 14,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 15,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 16,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 17,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 18,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 19,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 20,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 21,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 22,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 23,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 24,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 25,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 26,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 27,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 28,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 29,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 30,\r\n\t\t\t\"quantity\": 1\r\n\t\t},\r\n        \t\t{\r\n\t\t\t\"id\": 31,\r\n\t\t\t\"quantity\": 1\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/9/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"9",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4 repeating products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productsList\": [\r\n        {\r\n            \"id\": 1,\r\n            \"quantity\": 1\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Request Body",
					"item": []
				},
				{
					"name": "url param \"id\"",
					"item": [
						{
							"name": "1.7 non-existent valid id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const min = 15;\r",
											"const max = 100;\r",
											"const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r",
											"\r",
											"pm.variables.set(\"id\", randomNumber);\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/{{id}}/products?id",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"{{id}}",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.8 empty id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const min = 15;\r",
											"const max = 100;\r",
											"const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r",
											"\r",
											"pm.variables.set(\"id\", randomNumber);\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits//products?id",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.9 negative",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\", \"-\" + Math.floor(Math.random() * 100 + 1));\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/{{id}}/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"{{id}}",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.10 letters only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"const startIndex = Math.floor(Math.random() * (characters.length - 5));\r",
											"const id = characters.slice(startIndex, startIndex + 5);\r",
											"\r",
											"pm.variables.set(\"id\", id);\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/{{id}}/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"{{id}}",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.11 special characters only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const characters = '!@#$%^&*()_-+=[]{}|;:,.<>?';\r",
											"const startIndex = Math.floor(Math.random() * (characters.length - 5));\r",
											"const id = characters.slice(startIndex, startIndex + 5);\r",
											"\r",
											"pm.variables.set(\"id\", id);\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/{{id}}/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"{{id}}",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.12 id string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/\"5\"/products?id",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"\"5\"",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "body param \"id\"",
					"item": [
						{
							"name": "1.15 empty id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": \"\",\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.16 non-existent valid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData).to.eql({\r",
											"\"code\": 404, \"message\": \"Not Found\"\r",
											"});\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const min = 1000;\r",
											"const max = 2000;\r",
											"const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r",
											"\r",
											"pm.variables.set(\"id\", randomNumber);\r",
											"console.log(\"Test data: id = \" + pm.variables.get(\"id\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": {{id}},\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.17 string with letters and sp characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": \"sd#@\",\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.19 deleted id from json",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "body param \"quantity\"",
					"item": [
						{
							"name": "1.19 empty qnty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": \r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.20 string with letters and sp characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": \"sdf#$5\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.21 negative",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"quantity\", \"-\" + Math.floor(Math.random() * 100 + 1));\r",
											"console.log(\"Test data: quantity = \" + pm.variables.get(\"quantity\"));\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": {{quantity}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.22 deleted qnty from json",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    { \"id\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.23 string format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var randomNumber = Math.floor(Math.random() * 10) + 1;\r",
											"pm.variables.set(\"quantity\", randomNumber.toString());\r",
											"console.log(\"Test data: quantity = \" + pm.variables.get(\"quantity\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": {{quantity}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.24 valid qnty <= 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const arr = [1, 2, 15, 29, 30];\r",
											"\r",
											"arr.forEach(function (testData) {\r",
											"  pm.test(\"Adding product with quantity \" + testData, function () {\r",
											"    pm.sendRequest({\r",
											"      url: pm.variables.get(\"server_url\") + \"/api/v1/kits/7/products\",\r",
											"      method: \"POST\",\r",
											"      header: {\r",
											"        \"Content-Type\": \"application/json\"\r",
											"      },\r",
											"      body: {\r",
											"        mode: \"raw\",\r",
											"        raw: JSON.stringify({\r",
											"          \"productsList\": [\r",
											"            {\r",
											"              \"id\": 1,\r",
											"              \"quantity\": testData\r",
											"            }\r",
											"          ]\r",
											"        })\r",
											"      }\r",
											"    }, function (err, res) {\r",
											"      pm.expect(err).to.be.null;\r",
											"      pm.expect(res).to.have.property('code', 200);\r",
											"      pm.expect(res.json().productsList[0].quantity).to.eql(testData);\r",
											"    });\r",
											"  });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.25 invalid qnty > 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const arr = [31, 32, 10000];\r",
											"\r",
											"_.each(arr, function (testData) {\r",
											"  pm.sendRequest({\r",
											"    url: pm.variables.get(\"server_url\") + \"/api/v1/kits/7/products\",\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"      \"Content-Type\": \"application/json\"\r",
											"    },\r",
											"    body: {\r",
											"      mode: \"raw\",\r",
											"      raw: JSON.stringify({\r",
											"        \"productsList\": [\r",
											"          {\r",
											"            \"id\": 1,\r",
											"            \"quantity\": testData\r",
											"          }\r",
											"        ]\r",
											"      })\r",
											"    }\r",
											"  }, function (err, res) {\r",
											"    if (res.code === 400) {\r",
											"      pm.test(\"test_data = \" + testData + \". Status code 400\", function () {\r",
											"        pm.expect(res.code).to.eql(400);\r",
											"      });\r",
											"    } else {\r",
											"      pm.test(\"test_data = \" + testData + \". Status code 400\" + res.code, function () {\r",
											"        throw new Error(\"Wrong status code \" + res.code);\r",
											"      });\r",
											"    }\r",
											"  });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.26 qnty=0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"code\", 400);\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productsList\": [\r\n    {\r\n      \"id\": 1,\r\n      \"quantity\": 0\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/api/v1/kits/7/products",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"api",
										"v1",
										"kits",
										"7",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Delete kits",
			"item": [
				{
					"name": "Delete7th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Тестовый набор7\",\r\n\"cardId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits/7",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create 8th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits/8",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create 9th kit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/api/v1/kits/9",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"api",
								"v1",
								"kits",
								"9"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server_url",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}